package HW_5.PetManagementNewRealization;

/*Управление домашними питомцами
Управление домашними питомцами
Условие:
В системе может быть один домашний питомец, у каждого вида свои особенности ухода.
Примеры:
Собака гуляет и ест сухой корм
Кошка играет и ест влажный корм
Нужно спроектировать систему, которая позволяет взаимодействовать с любым питомцем с учётом его особенностей.

Абстрактный класс ИЛИ интерфейс:
если все сущности можно объединить действиями (и собака гуляет, играет, ест и кошка),
то абстрактный класс,
но если действие уникально для отдельных питомцев,
то используем интерфейс

Сущности: система, питомец, собака кошка

Действия, свойства, связи:
Питомец - нет свойств
Действия: есть

Питомцы играющие (полиморфизм)
Питомцы гуляющие (полиморфизм)
Подвиды питомца (наследование):
    Собака - нет свойств
        гулять (собака гуляет)
        есть (ест сухой корм)
    Кошка - нет свойств
        есть (ест влажный корм)
        играть (играет с мышкой)
Система - хранит питомца
    добавляем питомца
    кормить питомца
    играть с животными(питомец играющий)
    гулять с питомцем (питомец гуляющий)
*/



public class Main {
    public static void main(String[] args) {
        Dog sharik = new Dog();

        PetSystem petSystem = new PetSystem();
        petSystem.addPet(sharik);
        petSystem.feedPet();
        petSystem.feedPet();
        petSystem.forcePetToWalk();
        petSystem.forcePetToPlay();
    }
}
